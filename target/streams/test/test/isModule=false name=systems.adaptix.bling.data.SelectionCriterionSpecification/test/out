[0m[[0minfo[0m] [0mSelectionCriterionSpecification[0m
[0m[[0minfo[0m] [0m[0m
[0m[[0minfo[0m] [0mSelectionCriterion is an algebraic data type. It is a union of the following subtypes:[0m
[0m[[0minfo[0m] [0m 1. NoCriterion[0m
[0m[[0minfo[0m] [0m 2. OrderCriterion,[0m
[0m[[0minfo[0m] [0m 3. NullCriterion,[0m
[0m[[0minfo[0m] [0m 4. InCriterion[0m
[0m[[0minfo[0m] [0m 5. JunctiveCriterion,[0m
[0m[[0minfo[0m] [0m 6. NegativeCriterion.[0m
[0m[[0minfo[0m] [0m[0m
[0m[[0minfo[0m] [0m A SelectionCriterion provides two methods:[0m
[0m[[0minfo[0m] [0m 1. generateConstraints returns an ordered pair of type (String, Seq[Any]). The String represents the portion of an SQL SELECT statement occurring after a WHERE clause with \"?\"s where values are to be specified. The Seq[Any] contains the actual values being specified.[0m
[0m[[0minfo[0m] [0m 2. asSqlSyntaxWithValuesToBind returns an ordered pair of type (scalikejdbc.SQLSyntax, Seq[Any]) by simply converting the first coordinate of the generateConstraints return value into SQLSyntax.[0m
[0m[[0minfo[0m] [0m[0m
[0m[[0minfo[0m] [0m SelectionCriteria are meant to be constructed by calling the associated objects -- Eq, Ne, Lt, Le, Gt, Ge, In, Null, NotNull, And, Or, and Not.[0m
[0m[[0minfo[0m] [0m  [0m
[0m[[0minfo[0m] [0m  Eq, Ne, Lt, Le, Gt, Ge, Null, and NotNull generate atomic SelectionCriteria in the sense that they represent direct constraints on column values.[0m
[0m[[0minfo[0m] [0m    [32m+[0m Eq generates a SelectionCriterion representing the constraint that the value in the given column be EQUAL to the given value.[0m
[0m[[0minfo[0m] [0m    [32m+[0m Ne generates a SelectionCriterion representing the constraint that the value in the given column be NOT EQUAL to the given value.[0m
[0m[[0minfo[0m] [0m    [32m+[0m Lt generates a SelectionCriterion representing the constraint that the value in the given column be LESS THAN the given value.[0m
[0m[[0minfo[0m] [0m    [32m+[0m Le generates a SelectionCriterion representing the constraint that the value in the given column be LESS THAN OR EQUAL TO the given value.[0m
[0m[[0minfo[0m] [0m    [32m+[0m Gt generates a SelectionCriterion representing the constraint that the value in the given column be GREATER THAN the given value.[0m
[0m[[0minfo[0m] [0m    [32m+[0m Ge generates a SelectionCriterion representing the constraint that the value in the given column be GREATER THAN OR EQUAL TO the given value.[0m
[0m[[0minfo[0m] [0m    [32m+[0m Null generates a SelectionCriterion representing the constraint that the value in the given column be NULL.[0m
[0m[[0minfo[0m] [0m    [32m+[0m NotNull generates a SelectionCriterion representing the constraint that the value in the given column NOT be NULL.[0m
[0m[[0minfo[0m] [0m  In generates a SelectionCriterion representing the constraint that the value in the given column be present in the selection of given tableColumns from the table with given tableName which satisfy the given tableCriterion.[0m
[0m[[0minfo[0m] [0m    [32m+[0m It can be used to generate a constraint specifying that the value in a given column simply be in the specified column of the specified table.[0m
[0m[[0minfo[0m] [0m    [32m+[0m Or even by imposing a further constraint on the inner selection.[0m
[0m[[0minfo[0m] [0m  And, Or, and Not generate compound SelectionCriteria in the sense that they represent logical operations on other SelectionCriteria.[0m
[0m[[0minfo[0m] [0m    [32m+[0m And accepts a variable number of SelectionCriteria as arguments and generates a SelectionCriterion representing the constraint obtained by imposing ALL of the constraints represented by the inputs.[0m
[0m[[0minfo[0m] [0m    [32m+[0m Or accepts a variable number of SelectionCriteria as arguments and generates a SelectionCriterion representing the constrained obtained by requiring that AT LEAST ONE of the constraints represented by the inputs hold.[0m
[0m[[0minfo[0m] [0m    [32m+[0m Not accepts a single SelectionCriterion and generates a SelectionCriterion representing the NEGATION of the constraint represented by its input.[0m
[0m[[0minfo[0m] [0m    [32m+[0m Each of these objects can also accept compound SelectionCriteria as their inputs.[0m
[0m[[0minfo[0m] [0m  [32m+[0m There is also a NoCriterion singleton object which reflects that no constraints are being imposed on a selection.[0m
[0m[[0minfo[0m] [0m[0m
[0m[[0minfo[0m] [0mTotal for specification SelectionCriterionSpecification[0m
[0m[[0minfo[0m] [0m[36mFinished in 140 ms[0m[0m
[0m[[0minfo[0m] [0m[36m[0m[36m15 examples, 0 failure, 0 error[0m[0m
[0m[[0minfo[0m] [0m[0m
