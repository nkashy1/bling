<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="donkey" name="systems.adaptix.bling.tags.TagDagSpecification" tests="27" errors="0" failures="0" time="1.299">
                     <properties>
      <property name="jline.esc.timeout" value="0"/><property name="java.runtime.name" value="OpenJDK Runtime Environment"/><property name="sun.boot.library.path" value="/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/amd64"/><property name="java.vm.version" value="24.79-b02"/><property name="java.vm.vendor" value="Oracle Corporation"/><property name="java.vendor.url" value="http://java.oracle.com/"/><property name="path.separator" value=":"/><property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/><property name="file.encoding.pkg" value="sun.io"/><property name="user.country" value="US"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="sun.os.patch.level" value="unknown"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="user.dir" value="/home/nkashyap/dev/bling"/><property name="java.runtime.version" value="1.7.0_79-b14"/><property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/><property name="java.endorsed.dirs" value="/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/endorsed"/><property name="os.arch" value="amd64"/><property name="java.io.tmpdir" value="/tmp"/><property name="line.separator" value="
"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="os.name" value="Linux"/><property name="sun.jnu.encoding" value="UTF-8"/><property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.class.version" value="51.0"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="os.version" value="3.19.0-21-generic"/><property name="user.home" value="/home/nkashyap"/><property name="user.timezone" value="America/Los_Angeles"/><property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/><property name="file.encoding" value="UTF-8"/><property name="java.specification.version" value="1.7"/><property name="java.class.path" value="/usr/share/sbt-launcher-packaging/bin/sbt-launch.jar"/><property name="user.name" value="nkashyap"/><property name="jline.shutdownhook" value="false"/><property name="java.vm.specification.version" value="1.7"/><property name="sun.java.command" value="/usr/share/sbt-launcher-packaging/bin/sbt-launch.jar test"/><property name="java.home" value="/usr/lib/jvm/java-7-openjdk-amd64/jre"/><property name="sun.arch.data.model" value="64"/><property name="user.language" value="en"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="awt.toolkit" value="sun.awt.X11.XToolkit"/><property name="java.vm.info" value="mixed mode"/><property name="java.version" value="1.7.0_79"/><property name="java.ext.dirs" value="/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext"/><property name="sun.boot.class.path" value="/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/classes"/><property name="java.vendor" value="Oracle Corporation"/><property name="file.separator" value="/"/><property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/><property name="sun.io.unicode.encoding" value="UnicodeLittle"/><property name="sun.cpu.endian" value="little"/><property name="sun.cpu.isalist" value=""/>
    </properties>
                     <testcase classname="systems.adaptix.bling.tags.TagDagSpecification" name=" This means that every data point is, if not explicitly then implicitly tagged with it" time="0.047">
                                                 
                                               </testcase><testcase classname="systems.adaptix.bling.tags.TagDagSpecification" name=" The universalTag of the TagDag is the label of this root vertex" time="0.044">
                                                 
                                               </testcase><testcase classname="systems.adaptix.bling.tags.TagDagSpecification" name=" The value matching each of these tags is the DagVertex in the TagDag which has that tag as its label" time="0.045">
                                                 
                                               </testcase><testcase classname="systems.adaptix.bling.tags.TagDagSpecification" name="::The &quot;hasTag&quot; method is a means of testing whether or not a TagDag already contains a vertex with a given tag" time="0.043">
                                                 
                                               </testcase><testcase classname="systems.adaptix.bling.tags.TagDagSpecification" name="::&quot;assertHasTag&quot; throws an IllegalArgumentException if its argument IS NOT a registered tag" time="0.088">
                                                 
                                               </testcase><testcase classname="systems.adaptix.bling.tags.TagDagSpecification" name="::&quot;assertHasNotTag&quot; throws an IllegalArgumentException if its argument IS a registered tag" time="0.09">
                                                 
                                               </testcase><testcase classname="systems.adaptix.bling.tags.TagDagSpecification" name="::By default, the tag is inserted as a child of the TagDag's root vertex" time="0.105">
                                                 
                                               </testcase><testcase classname="systems.adaptix.bling.tags.TagDagSpecification" name="::The method also allows the insertion of a tag as a child to a specified Set of parents" time="0.15">
                                                 
                                               </testcase><testcase classname="systems.adaptix.bling.tags.TagDagSpecification" name="::The method also allows for specification of a Set of children of the tag to be inserted" time="0.093">
                                                 
                                               </testcase><testcase classname="systems.adaptix.bling.tags.TagDagSpecification" name="::Any insertion which ultimately violates acyclicity will result in an IllegalArgumentException and a reversion of state of the TagDag to before the insertion was attempted" time="0.063">
                                                 
                                               </testcase><testcase classname="systems.adaptix.bling.tags.TagDagSpecification" name="::The attempted insertion of a tag which already exists will cause the method to throw an IllegalArgumentException" time="0.044">
                                                 
                                               </testcase><testcase classname="systems.adaptix.bling.tags.TagDagSpecification" name="::The method also throws an IllegalArgumentException if one of the specified parents or children is not a registered tag" time="0.048">
                                                 
                                               </testcase><testcase classname="systems.adaptix.bling.tags.TagDagSpecification" name="::The tags are returned in a container of type Seq[String]" time="0.093">
                                                 
                                               </testcase><testcase classname="systems.adaptix.bling.tags.TagDagSpecification" name="::The method throws an IllegalArgumentException if the originating tag is not registered in the TagDag" time="0.013">
                                                 
                                               </testcase><testcase classname="systems.adaptix.bling.tags.TagDagSpecification" name="::The &quot;validateUniversality&quot; method checks if every registered tag in a TagDag is reachable from the universalTag" time="0.028">
                                                 
                                               </testcase><testcase classname="systems.adaptix.bling.tags.TagDagSpecification" name="::The argument order determines the direction of the edge" time="0.033">
                                                 
                                               </testcase><testcase classname="systems.adaptix.bling.tags.TagDagSpecification" name="::The method throws an exception if either one of the tags has not been registered in the TagDag" time="0.008">
                                                 
                                               </testcase><testcase classname="systems.adaptix.bling.tags.TagDagSpecification" name="::The method reverts the TagDag to its previous state and throws an IllegalArgumentException if the introduction of the link creates a cycle in the TagDag" time="0.073">
                                                 
                                               </testcase><testcase classname="systems.adaptix.bling.tags.TagDagSpecification" name="::The argument order determines the direction of the edge" time="0.026">
                                                 
                                               </testcase><testcase classname="systems.adaptix.bling.tags.TagDagSpecification" name="::The method throws an IllegalArgumentException if either of its arguments has not been registered in the TagDag" time="0.012">
                                                 
                                               </testcase><testcase classname="systems.adaptix.bling.tags.TagDagSpecification" name="::The method gracefully does nothing if, although both its arguments are registered in the TagDag, there is no edge between them in the specified direction" time="0.012">
                                                 
                                               </testcase><testcase classname="systems.adaptix.bling.tags.TagDagSpecification" name="::The method reverts the TagDag to its previous state and throws an IllegalArgumentException if the specified unlinking causes the child node to become isolated" time="0.012">
                                                 
                                               </testcase><testcase classname="systems.adaptix.bling.tags.TagDagSpecification" name="::The new tag is interjected between the contextual tag and its children" time="0.042">
                                                 
                                               </testcase><testcase classname="systems.adaptix.bling.tags.TagDagSpecification" name="::If the groupTag has already been registered in the TagDag, the method throws an IllegalArgumentException" time="0.006">
                                                 
                                               </testcase><testcase classname="systems.adaptix.bling.tags.TagDagSpecification" name="::If the contextTag or one of the memberTags is NOT a registered tag, or if any of the memberTags is not a child of the contextTag, the method throws an IllegalArgumentException" time="0.042">
                                                 
                                               </testcase><testcase classname="systems.adaptix.bling.tags.TagDagSpecification" name="::The tag to be moved is passed as the first argument, and its new parent is passed as the second argument" time="0.029">
                                                 
                                               </testcase><testcase classname="systems.adaptix.bling.tags.TagDagSpecification" name="::If either argument is not a registered tag, the method throws an IllegalArgumentException" time="0.01">
                                                 
                                               </testcase>
                     <system-out></system-out>
                     <system-err></system-err>
                   </testsuite>